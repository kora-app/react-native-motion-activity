/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, { useEffect, useReducer, useState } from 'react';
import { StyleSheet, Text, View } from 'react-native';
import * as MotionActivity from 'react-native-motion-activity';

const Confidence = MotionActivity.Confidence;

const Y = () => <Text style={styles.yes}>Y</Text> ;
const N = () => <Text style={styles.no}>N</Text>;

const App = () => {
  const [status, setStatus] = useState();
  const [updates, add] = useReducer((state, update) => {
      return [...state, update]
  }, []);

  useEffect(() => {
    MotionActivity.getAuthorisationStatus().then(setStatus)

    return MotionActivity.getUpdates(add);
  }, []);

  const update = updates[updates.length - 1];

  return (
      <View style={styles.container}>
        <Text style={styles.welcome}>☆RNMotionActivity example☆</Text>
        <Text style={styles.instructions}>STATUS: {status}</Text>
          {!!update && (
            <>
                <Text style={styles.welcome}>☆Status☆</Text>
                <Text style={styles.instructions}>Automotive: {update.automotive ? <Y /> : <N />}</Text>
                <Text style={styles.instructions}>Confidence: {Confidence[update.confidence]}</Text>
                <Text style={styles.instructions}>Cycling: {update.cycling ? <Y /> : <N />}</Text>
                <Text style={styles.instructions}>Running: {update.running ? <Y /> : <N />}</Text>
                <Text style={styles.instructions}>StartDate: {update.startDate}</Text>
                <Text style={styles.instructions}>Stationary: {update.stationary ? <Y /> : <N />}</Text>
                <Text style={styles.instructions}>Unknown: {update.unknown ? <Y /> : <N />}</Text>
                <Text style={styles.instructions}>Walking: {update.walking ? <Y /> : <N />}</Text>
            </>
          )}
        <Text style={styles.welcome}>☆Updates☆</Text>
        <View>
          {updates.reverse().slice(0, 10).map(update =>
              <Text style={styles.instructions}>{JSON.stringify(update)}</Text>)}
        </View>
      </View>
  );
};

export default App;

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#F5FCFF',
    },
    welcome: {
        fontSize: 20,
        textAlign: 'center',
        margin: 10,
    },
    instructions: {
        textAlign: 'center',
        color: '#333333',
        marginBottom: 5,
    },
    yes: {
        backgroundColor: '#269c47',
        color: 'white',
        padding: 2,
    },
    no: {
        backgroundColor: '#ed181d',
        color: 'white',
        padding: 2,
    },
});
